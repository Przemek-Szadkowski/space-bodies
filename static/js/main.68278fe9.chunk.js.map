{"version":3,"sources":["components/BodieRecord.js","components/Loader.js","components/BodiesTable.js","components/Dashboard.js","components/SearchInput.js","App.js","index.js"],"names":["BodieRecord","props","refInput","useRef","className","onClick","current","classList","toggle","ref","data","name","density","gravity","mass","massValue","meanRadius","moons","length","sideralOrbit","sideralRotation","Loader","BodiesTable","wordToFind","bodies","refText","refProgressBar","onScroll","height","Math","round","scrollTop","scrollHeight","style","loading","searchingBodies","filter","bodie","regex","RegExp","match","map","id","Dashboard","arePlanets","showBodies","showPlanets","toggleSearchInput","SearchInput","htmlFor","type","autoFocus","autoComplete","onChange","e","value","target","setSearchingBodies","App","useState","setBodies","setArePlanets","isSearchInput","setIsSearchInput","setLoading","getData","a","fetch","response","json","bodiesData","useEffect","body","isPlanet","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.68278fe9.chunk.js","sourcesContent":["import React, {useRef} from 'react'\r\n\r\nexport default function BodieRecord(props) {\r\n\r\n    const refInput = useRef(null);\r\n\r\n    const handleRecordClick = () => {\r\n        refInput.current.classList.toggle('active');\r\n    };\r\n\r\n    return (\r\n        <div className=\"record\" onClick={handleRecordClick} ref={refInput}>\r\n            <p >{props.data.name}</p>\r\n            <p className=\"bodie-data\">Density: {props.data.density} <span className=\"unit\">( g.cm3 )</span></p>\r\n            <p className=\"bodie-data\">Gravity: {props.data.gravity} <span className=\"unit\">( m.s-2 )</span></p>\r\n            <p className=\"bodie-data\">Mass: {props.data.mass ? props.data.mass.massValue : 'NA'} <span className=\"unit\"> ( in 10<sup>n</sup> kg )</span></p>\r\n            <p className=\"bodie-data\">Mean radius : {props.data.meanRadius} <span className=\"unit\">( km )</span></p>\r\n            <p className=\"bodie-data\">Moons : {props.data.moons ? props.data.moons.length : 0}</p>\r\n            <p className=\"bodie-data\">Sideral orbit: {props.data.sideralOrbit} <span className=\"unit\">( in earth day )</span></p>\r\n            <p className=\"bodie-data\">Sideral rotation: {props.data.sideralRotation} <span className=\"unit\">( in hour )</span></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Loader() {\r\n    return (\r\n        <>\r\n            <div className=\"loader_left\">\r\n            </div>\r\n            <h2 className=\"loading\">LOADING...</h2>\r\n        </>\r\n    )\r\n}\r\n","import React, {useRef} from 'react';\r\nimport BodieRecord from './BodieRecord';\r\nimport Loader from './Loader';\r\n\r\nexport default function BodiesTable(props) {\r\n\r\n    const refText = useRef(null);\r\n    const refProgressBar = useRef(null);\r\n\r\n    const findSearchingBodies = (wordToFind, bodies) => {\r\n        return bodies.filter(bodie => {\r\n            const regex = new RegExp(wordToFind, 'gi');\r\n            return bodie.name.match(regex);\r\n        });\r\n    };\r\n\r\n    const handleScroll = () => {\r\n        const height = Math.round(((refText.current.scrollTop) * 100) / (refText.current.scrollHeight));\r\n        refProgressBar.current.style.height = `${height}vh`;\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"text\" onScroll={handleScroll} ref={refText}>\r\n                <div className=\"progress_bar\" ref={refProgressBar}></div>\r\n                {props.loading ? <Loader/> : <div className=\"mainList\">\r\n                {props.searchingBodies\r\n                ? findSearchingBodies(props.searchingBodies, props.bodies).map( bodie => {\r\n                        return <BodieRecord key={bodie.id} data={bodie}/>})\r\n                    : props.bodies && props.bodies.map( bodie => {\r\n                    return <BodieRecord key={bodie.id} data={bodie}/>\r\n                })}\r\n                </div>}\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nexport default function Dashboard(props) {\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <button\r\n                className={\r\n                    !props.arePlanets\r\n                    ? \"dashboard__btn dashboard__btn__main dashboard__btn__main--active\"\r\n                    :  \"dashboard__btn dashboard__btn__main\"\r\n                }\r\n                onClick={props.showBodies}>\r\n                    All bodies\r\n            </button>\r\n            <button\r\n                className={\r\n                    props.arePlanets\r\n                    ? \"dashboard__btn dashboard__btn__main dashboard__btn__main__planets dashboard__btn__main__planets--active\"\r\n                    : \"dashboard__btn dashboard__btn__main dashboard__btn__main__planets\"\r\n                }\r\n                onClick={props.showPlanets}>\r\n                    Planets\r\n            </button>\r\n            <button className=\"dashboard__btn dashboard__btn__start\" onClick={props.toggleSearchInput}>Search</button>\r\n            <button className=\"dashboard__btn dashboard__btn__options\">1</button>\r\n            <button className=\"dashboard__btn dashboard__btn__options\">2</button>\r\n            <button className=\"dashboard__btn dashboard__btn__options\">3</button>\r\n            <button className=\"dashboard__btn dashboard__btn__options\">4</button>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function SearchInput(props) {\r\n\r\n    const handleChange = e => {\r\n        const value = e.target.value;\r\n        props.setSearchingBodies(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"search\">\r\n            <label htmlFor=\"search\">Search by name:</label>\r\n            <input type=\"search\" id=\"search\" name=\"search\" autoFocus autoComplete=\"off\" onChange={handleChange}/>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react';\nimport BodiesTable from \"./components/BodiesTable\";\nimport Dashboard from \"./components/Dashboard\";\nimport SearchInput from './components/SearchInput';\n\nconst ENDPOINT = 'https://api.le-systeme-solaire.net/rest/bodies/';\n\nfunction App() {\n\n  const [bodies, setBodies] = useState([]);\n  const [arePlanets, setArePlanets] = useState(false);\n  const [isSearchInput, setIsSearchInput] = useState(false);\n  const [searchingBodies, setSearchingBodies] = useState('');\n  const [loading, setLoading] = useState(true);\n\n  const getData = async () => {\n    const response = await fetch(ENDPOINT);\n    const bodiesData = await response.json();\n    setBodies(bodiesData);\n    setLoading(false);\n  }\n\n  const showBodies = () => {\n    setArePlanets(false);\n  }\n\n  const showPlanets = () => {\n    setArePlanets(true);\n  }\n\n  const toggleSearchInput = () => {\n    setIsSearchInput(!isSearchInput);\n    if(isSearchInput) setSearchingBodies('');\n  }\n\n\n  useEffect(() => {\n      getData();\n  }, []);\n\n  return (\n    <main>\n      {isSearchInput && <SearchInput setSearchingBodies={setSearchingBodies}/>}\n      <Dashboard arePlanets={arePlanets} bodies={arePlanets ? bodies.bodies.filter(body => body.isPlanet) : bodies.bodies} showBodies={showBodies} showPlanets={showPlanets} toggleSearchInput={toggleSearchInput}/>\n      {<BodiesTable loading={loading} searchingBodies={searchingBodies} bodies={arePlanets ? bodies.bodies.filter(body => body.isPlanet) : bodies.bodies}/>}\n    </main>\n  );\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}